name: Build and Upload SwiftUIDemo to TestFlight (No Fastlane)

on:
  push:
    branches: [ Release-Store ]
    tags:
      - 'Store*'
  pull_request:
    branches: [ Release-Store ]

jobs:
  build:
    runs-on: macos-13

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Xcode version
        run: sudo xcode-select -s /Applications/Xcode_15.0.app

      - name: Install dependencies (CocoaPods)
        run: |
          cd ios
          pod install

      - name: Generate Build Number
        id: buildnumber
        uses: einaregilsson/build-number@v2
        with:
          token: ${{ secrets.ACTION_TEST }}
          prefix: IOS

      - name: Show Build Number
        run: echo "Build Number:${{ steps.buildnumber.outputs.build_number }}"

      - name: Build archive
        run: |
          xcodebuild clean archive \
            -workspace ios/SwiftUIDemo.xcworkspace \
            -scheme SwiftUIDemo \
            -configuration Release \
            -archivePath ios/build/SwiftUIDemo.xcarchive \
            -destination 'generic/platform=iOS' \
            -allowProvisioningUpdates \
            -disableAutomaticPackageResolution \
            -quiet \
            CURRENT_PROJECT_VERSION=${{ steps.buildnumber.outputs.build_number }}

      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath ios/build/SwiftUIDemo.xcarchive \
            -exportPath ios/build \
            -exportOptionsPlist ios/ExportOptions.plist \
            -allowProvisioningUpdates \
            -quiet

      - name: Write API Key to file
        run: echo "${{ secrets.APP_STORE_CONNECT_API_KEY_B64 }}" > AuthKey.p8

      - name: Upload to TestFlight
        run: |
          xcrun altool --upload-app \
            --type ios \
            --file ios/build/SwiftUIDemo.ipa \
            --apiKey ${{ secrets.APPSTORE_KEY_ID }} \
            --apiIssuer ${{ secrets.APPSTORE_ISSUER_ID }}

      - name: Cleanup
        run: rm -f AuthKey.p8

      - name: Show Job Status
        if: always()
        run: echo "Job status:${{ job.status }}"
